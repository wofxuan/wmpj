unit WMServer_Intf;

{----------------------------------------------------------------------------}
{ This unit was automatically generated by the RemObjects SDK after reading  }
{ the RODL file associated with this project .                               }
{                                                                            }
{ Do not modify this unit manually, or your changes will be lost when this   }
{ unit is regenerated the next time you compile the project.                 }
{----------------------------------------------------------------------------}

{$I RemObjects.inc}

interface

uses
  {vcl:} Classes, TypInfo,
  {RemObjects:} uROXMLIntf, uROClasses, uROClient, uROTypes, uROClientIntf;

const
  { Library ID }
  LibraryUID = '{EA432636-8BB5-43CF-99A1-A539BD51F630}';
  TargetNamespace = '';

  { Service Interface ID's }
  IWMFBData_IID : TGUID = '{A2D40E20-9126-4015-A42B-B5C162767B59}';

  { Event ID's }

type
  { Forward declarations }
  IWMFBData = interface;


  { IWMFBData }
  IWMFBData = interface
    ['{A2D40E20-9126-4015-A42B-B5C162767B59}']
    function Sum(const A: Integer; const B: Integer): Integer;
    function GetServerTime: DateTime;
    function QuerySQL(const ASQL: AnsiString; var ABackData: OleVariant): Integer;
    function OpenSQL(const ASQL: AnsiString): Integer;
    function ExecuteProc(const AInputParams: OleVariant; out AOutParams: OleVariant): Integer;
    function ExecuteProcBackData(const AInputParams: OleVariant; out AOutParams: OleVariant; var ABackData: OleVariant): Integer;
    function SaveBill(const ABillData: OleVariant; var AOutPutData: OleVariant): Integer;
    function Login(const AUserName: AnsiString; const AUserPSW: AnsiString; var AMsg: AnsiString): Integer;
  end;

  { CoWMFBData }
  CoWMFBData = class
    class function Create(const aMessage: IROMessage; aTransportChannel: IROTransportChannel): IWMFBData;
  end;

  { TWMFBData_Proxy }
  TWMFBData_Proxy = class(TROProxy, IWMFBData)
  protected
    function __GetInterfaceName:string; override;

    function Sum(const A: Integer; const B: Integer): Integer;
    function GetServerTime: DateTime;
    function QuerySQL(const ASQL: AnsiString; var ABackData: OleVariant): Integer;
    function OpenSQL(const ASQL: AnsiString): Integer;
    function ExecuteProc(const AInputParams: OleVariant; out AOutParams: OleVariant): Integer;
    function ExecuteProcBackData(const AInputParams: OleVariant; out AOutParams: OleVariant; var ABackData: OleVariant): Integer;
    function SaveBill(const ABillData: OleVariant; var AOutPutData: OleVariant): Integer;
    function Login(const AUserName: AnsiString; const AUserPSW: AnsiString; var AMsg: AnsiString): Integer;
  end;

implementation

uses
  {vcl:} SysUtils,
  {RemObjects:} uROEventRepository, uROSerializer, uRORes;

{ CoWMFBData }

class function CoWMFBData.Create(const aMessage: IROMessage; aTransportChannel: IROTransportChannel): IWMFBData;
begin
  result := TWMFBData_Proxy.Create(aMessage, aTransportChannel);
end;

{ TWMFBData_Proxy }

function TWMFBData_Proxy.__GetInterfaceName:string;
begin
  result := 'WMFBData';
end;

function TWMFBData_Proxy.Sum(const A: Integer; const B: Integer): Integer;
begin
  try
    __Message.InitializeRequestMessage(__TransportChannel, 'WMServer', __InterfaceName, 'Sum');
    __Message.Write('A', TypeInfo(Integer), A, []);
    __Message.Write('B', TypeInfo(Integer), B, []);
    __Message.Finalize;

    __TransportChannel.Dispatch(__Message);

    __Message.Read('Result', TypeInfo(Integer), result, []);
  finally
    __Message.UnsetAttributes(__TransportChannel);
    __Message.FreeStream;
  end
end;

function TWMFBData_Proxy.GetServerTime: DateTime;
begin
  try
    __Message.InitializeRequestMessage(__TransportChannel, 'WMServer', __InterfaceName, 'GetServerTime');
    __Message.Finalize;

    __TransportChannel.Dispatch(__Message);

    __Message.Read('Result', TypeInfo(DateTime), result, [paIsDateTime]);
  finally
    __Message.UnsetAttributes(__TransportChannel);
    __Message.FreeStream;
  end
end;

function TWMFBData_Proxy.QuerySQL(const ASQL: AnsiString; var ABackData: OleVariant): Integer;
begin
  try
    __Message.InitializeRequestMessage(__TransportChannel, 'WMServer', __InterfaceName, 'QuerySQL');
    __Message.Write('ASQL', TypeInfo(AnsiString), ASQL, []);
    __Message.Write('ABackData', TypeInfo(OleVariant), ABackData, []);
    __Message.Finalize;

    __TransportChannel.Dispatch(__Message);

    __Message.Read('Result', TypeInfo(Integer), result, []);
    __Message.Read('ABackData', TypeInfo(OleVariant), ABackData, []);
  finally
    __Message.UnsetAttributes(__TransportChannel);
    __Message.FreeStream;
  end
end;

function TWMFBData_Proxy.OpenSQL(const ASQL: AnsiString): Integer;
begin
  try
    __Message.InitializeRequestMessage(__TransportChannel, 'WMServer', __InterfaceName, 'OpenSQL');
    __Message.Write('ASQL', TypeInfo(AnsiString), ASQL, []);
    __Message.Finalize;

    __TransportChannel.Dispatch(__Message);

    __Message.Read('Result', TypeInfo(Integer), result, []);
  finally
    __Message.UnsetAttributes(__TransportChannel);
    __Message.FreeStream;
  end
end;

function TWMFBData_Proxy.ExecuteProc(const AInputParams: OleVariant; out AOutParams: OleVariant): Integer;
begin
  try
    __Message.InitializeRequestMessage(__TransportChannel, 'WMServer', __InterfaceName, 'ExecuteProc');
    __Message.Write('AInputParams', TypeInfo(OleVariant), AInputParams, []);
    __Message.Finalize;

    __TransportChannel.Dispatch(__Message);

    __Message.Read('Result', TypeInfo(Integer), result, []);
    __Message.Read('AOutParams', TypeInfo(OleVariant), AOutParams, []);
  finally
    __Message.UnsetAttributes(__TransportChannel);
    __Message.FreeStream;
  end
end;

function TWMFBData_Proxy.ExecuteProcBackData(const AInputParams: OleVariant; out AOutParams: OleVariant; var ABackData: OleVariant): Integer;
begin
  try
    __Message.InitializeRequestMessage(__TransportChannel, 'WMServer', __InterfaceName, 'ExecuteProcBackData');
    __Message.Write('AInputParams', TypeInfo(OleVariant), AInputParams, []);
    __Message.Write('ABackData', TypeInfo(OleVariant), ABackData, []);
    __Message.Finalize;

    __TransportChannel.Dispatch(__Message);

    __Message.Read('Result', TypeInfo(Integer), result, []);
    __Message.Read('AOutParams', TypeInfo(OleVariant), AOutParams, []);
    __Message.Read('ABackData', TypeInfo(OleVariant), ABackData, []);
  finally
    __Message.UnsetAttributes(__TransportChannel);
    __Message.FreeStream;
  end
end;

function TWMFBData_Proxy.SaveBill(const ABillData: OleVariant; var AOutPutData: OleVariant): Integer;
begin
  try
    __Message.InitializeRequestMessage(__TransportChannel, 'WMServer', __InterfaceName, 'SaveBill');
    __Message.Write('ABillData', TypeInfo(OleVariant), ABillData, []);
    __Message.Write('AOutPutData', TypeInfo(OleVariant), AOutPutData, []);
    __Message.Finalize;

    __TransportChannel.Dispatch(__Message);

    __Message.Read('Result', TypeInfo(Integer), result, []);
    __Message.Read('AOutPutData', TypeInfo(OleVariant), AOutPutData, []);
  finally
    __Message.UnsetAttributes(__TransportChannel);
    __Message.FreeStream;
  end
end;

function TWMFBData_Proxy.Login(const AUserName: AnsiString; const AUserPSW: AnsiString; var AMsg: AnsiString): Integer;
begin
  try
    __Message.InitializeRequestMessage(__TransportChannel, 'WMServer', __InterfaceName, 'Login');
    __Message.Write('AUserName', TypeInfo(AnsiString), AUserName, []);
    __Message.Write('AUserPSW', TypeInfo(AnsiString), AUserPSW, []);
    __Message.Write('AMsg', TypeInfo(AnsiString), AMsg, []);
    __Message.Finalize;

    __TransportChannel.Dispatch(__Message);

    __Message.Read('Result', TypeInfo(Integer), result, []);
    __Message.Read('AMsg', TypeInfo(AnsiString), AMsg, []);
  finally
    __Message.UnsetAttributes(__TransportChannel);
    __Message.FreeStream;
  end
end;

initialization
  RegisterProxyClass(IWMFBData_IID, TWMFBData_Proxy);


finalization
  UnregisterProxyClass(IWMFBData_IID);

end.
